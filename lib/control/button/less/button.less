@import "./variables";

/*
  Button styling.
*/
.__BUTTON__ {

  display: inline-block;
  font-weight: @button-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  border: 1px solid transparent;
  white-space: nowrap;

  .buttonDimension(
  @button-padding-vertical;
  @button-padding-horizontal;
  @button-font-size;
  @button-line-height;
  @button-border-radius);

  user-select: none;

  &:hover, &:focus {

    color: @button-color;
    text-decoration: none;

  }

  &:active {

    .buttonActiveFeel();

  }

  &[disabled] {

    cursor: not-allowed;
    opacity: .65;
    box-shadow: none;

  }

  &.__DEFAULT__ {

    .buttonStyle(
    @button-color;
    @button-default-background;
    @button-default-border-color);

  }

  &.__PRIMARY__ {

    .buttonStyle(
    @button-primary-color;
    @button-primary-background;
    @button-primary-border-color);

  }

  &.__SUCCESS__ {

    .buttonStyle(
    @button-success-color;
    @button-success-background;
    @button-success-border-color);

  }

  &.__INFO__ {

    .buttonStyle(
    @button-info-color,
    @button-info-background,
    @button-info-border-color);

  }

  &.__WARNING__ {

    .buttonStyle(
    @button-warning-color,
    @button-warning-background,
    @button-warning-border-color);

  }

  &.__ERROR__ {

    .buttonStyle(
    @button-error-color, 
    @button-error-background,
    @button-error-border-color);

  }

  &.__LINK__ {

    .buttonLink(
      @button-link-color;
      @button-link-disabled-color;
      @button-link-hover-color;
      @button-link-hover-decoration);

  }

  &.__ACTIVE__ {

    .buttonActiveFeel();

  }

  &.__EXTRA_SMALL__ {

   .buttonDimension(
    @button-extra-small-padding-vertical; 
    @button-extra-small-padding-horizontal;
    @button-extra-small-font-size;
    @button-extra-small-line-height;
    @button-extra-small-border-radius);

  }

  &.__SMALL__ {

    .buttonDimension(
    @button-small-padding-vertical; 
    @button-small-padding-horizontal;
    @button-small-font-size;
    @button-small-line-height;
    @button-small-border-radius);

  }

  &.__LARGE__ {

    .buttonDimension(
    @button-large-padding-vertical; 
    @button-large-padding-horizontal;
    @button-large-font-size;
    @button-large-line-height;
    @button-large-border-radius);

  }

  &.__EXTRA_LARGE__ {

    .buttonDimension(
    @button-extra-large-padding-vertical; 
    @button-extra-large-padding-horizontal;
    @button-extra-large-font-size;
    @button-extra-large-line-height;
    @button-extra-large-border-radius);

  }

  &.__BLOCK__ {

    display: block;
    width: 100%;

    // Vertically space out multiple block buttons
    & + & {

      margin-top: @button-sibling-spacing;

    }

  }

  & + & {

    margin-left: @button-sibling-spacing;

  }

}

/* 
buttonDimension defines the sizing of a button.

@pv       - Vertical padding.
@ph       - Horizontal padding.
@font     - Font size.
@lh       - Line height.
@br       - Border radius.
*/
.buttonDimension(@pv; @ph; @font; @lh; @br) {

  padding: @pv @ph;
  font-size: @font;
  line-height: @lh;
  border-radius: @br;

}

/*
buttonColor provides the color styling of a button.

@color       - The base text color.
@background  - The base background color.
@border      - The base border color.

*/
.buttonColor(@color; @background; @border) {

  color: @color;
  background-color: @background;
  border-color: @border;

}

/*
buttonOutline provides an alternative outline based styling for a button.

@color - The color for the outline.
*/
.buttonOutline(@color) {

  color: @color;
  background-color: transparent;
  border-color: @color;

  &:hover {

    color: darken(@color, 50%);
    background-color: @color;
    border-color: @color;

  }

  &:disabled {

    color: @color;
    background-color: transparent;

  }

}

/*
buttonStyle defines styles for a variant of a button.

@color       - The base text color.
@background  - The base background color.
@border      - The base border color.
*/
.buttonStyle(@color; @background; @border) {

  .buttonColor(@color; @background; @border);

  &:focus { 

    .buttonColor(@color, darken(@background, 10%), darken(@border,25%)); 

  }

  &:hover {

    .buttonColor(@color, darken(@background, 10%), darken(@border, 12%));

  }

  &:active, &.__ACTIVE__ {

    .buttonColor(@color, darken(@background, 10%), darken(@border, 12%));

  }

  &[disabled]:hover, &[disabled]:focus {

    .buttonColor(@color, @background, @border);

  }

  &.__OUTLINE__ {

    .buttonOutline(@background);

  }

}

/*
buttonActiveFeel styles the feeling of a button while active.
*/ 
.buttonActiveFeel() {

  outline: 0;
  background-image: none;
  box-shadow: inset 0 3px 5px rgba(0,0,0,.125);

}

/*
buttonLinkBackground styles the background and shadows.
*/
.buttonLinkBackground() {

  background-color: transparent;
  box-shadow: none;

}

/*
buttonLink styles the button to appear like a link.
*/
.buttonLink( 
            @link-color;
            @link-disabled-color;
            @link-hover-color;
            @link-hover-decoration) {

  color: @link-color;
  font-weight: normal;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;

  &:hover, &:focus {

    color: @link-hover-color;
    text-decoration: @link-hover-decoration;
    background-color: transparent;

  }

  &[disabled]:hover, &[disabled]:focus {

    color: @link-disabled-color;
    text-decoration: none;

  }

}
