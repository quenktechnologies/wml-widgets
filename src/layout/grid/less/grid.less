@import "@quenk/common-less/screen";
@import "./span.less";
@import "./offset.less";
@import "./variables";

/**
 * The wml-widgets non-flex based grid layout framework.
 * 
 * Based on the bootstrap framework.
 * TODO: bring styles here:
 * We intend to replace the col-md-* stuff with individual 
 * modifier classes in a scale like : -x1 -x2 -x3 -x4 -x5 -x6.
 *  
 * Each one of these will have style variables attached.
 */
.__GRID_LAYOUT__ {

  padding: @grid-layout-padding-vertical @grid-layout-padding-horizontal;
  margin: @grid-layout-margin-vertical auto;
  background-color: @grid-layout-background-color;
  
  &:before, &:after {

    content: " ";
    display: table;

  }

  &:after {

     clear: both;

  }

  /**
   * Rows group columns together, ideally on the same line but overflows
   * are allowed.
   */
   &  .__GRID_LAYOUT_ROW__ {

    padding: @grid-layout-row-padding-vertical @grid-layout-row-padding-horizontal;
    margin-left: -(@grid-layout-padding-horizontal);
    margin-right: -(@grid-layout-padding-horizontal);
    margin-top: @grid-layout-row-margin-vertical;
    margin-bottom: @grid-layout-row-margin-vertical;

    &:before, &:after {

      content: " ";
      display: table;

    }

    &:after {

      clear: both;

    }

    /**
     * Style the columns within a row.
     *
     * Columns should always be within a row.
     */
    &  .__GRID_LAYOUT_COLUMN__ {

      min-height: 1px; // Prevent columns from collapsing when empty
      padding-left: @grid-layout-padding-horizontal;
      padding-right: @grid-layout-padding-horizontal;
      margin: @grid-layout-margin-vertical @grid-layout-column-margin-horizontal;
      position: relative;

      /**
       * These styles only kick in when the screen is large enough.
       * For smaller screens each column fills the whole row.
       * @todo: do not depend on bootstrap's variable, also
       * we should support more breakpoints for phones etc.
       * What we do want is to not have col-md, col-sm col-xs crap,
       * instead just 'ww-column' that adjusts through other classes
       * or media queries.
       */
      @media (min-width: @screen-medium) {

        float: left;
        .span(1, @grid-columns);
        .offset(1, @grid-columns);

      }

    }

  }

}
