import {get as property} from 'property-seek'
import * as Styles from 'wml-widgets-common/Styles'
import {HeadingClickedEvent, RowClickedEvent, RowSelectedEvent, CellClickedEvent} from '../Table'
import {Fragment} from '../../'
import {Field} from '../Table'

{% macro thead [D](fields:Field[D][]) %}

  <tr>

    {% if @.read('ww:selectable') %}

      <th>

        <input 
          type="checkbox"
          onclick={{=>this.model.allRowsSelected()}}/>
      
      </th>

    {% endif %}

    {% for field:Field[D] in fields %}

      {% if !field.hidden %}

        {% if field.sortAs %}

          <th 
            class={{[@.read('ww:headingClass'), (this.sortedOn == field.name)? Styles.ACTIVE : ''].join(' ') }}
            onclick={{=>this.model.headingClicked(new HeadingClickedEvent(field.name, field, this))}}>

            {{field.heading}}

              {% if (this.sortedOn == field.name)  %}

                {{this.arrow}}

              {% endif %}
                  
          </th>

         {% else %}

            <th 
              class={{[@.read('ww:headingClass'), (this.sortedOn == field.name)? Styles.ACTIVE : ''].join(' ') }}
              onclick={{=>this.model.headingClicked(new HeadingClickedEvent(field.name, field, this))}}>
              {{field.heading}}

              {% if (this.sortedOn == field.name)  %}

                {{this.arrow}}

              {% endif %}

            </th>
 
         {% endif %}

        {% endif %}

      {% endfor %}

  </tr>

{% endmacro %}

{% macro tbody[D](data:D[], fields:Field[D][]) %}

  <Fragment>

    {% for row:D,index:string in data %}

      <tr 
        class={{@.read('ww:rowClass')}}
        onclick={{=>this.model.rowClicked(new RowClickedEvent(row,index,data,this))}}>

        {% if @.read('ww:selectable') %}

          <td>
            
            <input 
              type="checkbox"
              onclick={{=>this.model.rowSelected(new RowSelectedEvent(row,index,data,this))}}/>
          
          </td>

        {% endif %}

        {% for field:Field[D] in fields %}
                
          {% if !field.hidden %}

            <td 
              class={{@.read('ww:cellClass')}}
              onclick={{=>this.model.cellClicked(new CellClickedEvent(property(field.name,row),field.name,index,row,this))}}>

              {% if field.fragment %}

                {% call field.fragment (property(field.name,row),field.name,row,field) %}

              {% else %}

                {{ property(field.name,row) }}

              {% endif %}

            </td>

          {% endif %}

        {% endfor %}

      </tr>

    {% endfor %}

</Fragment>

{% endmacro %}

{% view TableView %}

    <table 
      class={{[Styles.TABLE, @.read('ww:class', '')].join(' ')}}>

      <thead 
        wml:id="head">{% call thead(@.read('ww:fields')) %}</thead>
        
      <tbody 
        wml:id="body"> {% call tbody(this.data, @.read('ww:fields')) %}</tbody>

    </table>

{% endview %}

